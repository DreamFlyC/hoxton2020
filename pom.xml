<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.czp.springcloud</groupId>
  <artifactId>hoxton2020</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>

  <modules>
    <module>cloud-provider-payment-eureka-8001</module>
    <module>cloud-provider-payment-eureka-8002</module>
    <module>cloud-provider-payment-zookeeper-8004</module>
    <module>cloud-provider-payment-consul-8006</module>
    <module>cloud-consumer-eureka-order-80</module>
    <module>cloud-api-commons</module>
    <module>cloud-eureka-server-7001</module>
    <module>cloud-eureka-server-7002</module>
    <module>cloud-consumer-zk-order-80</module>
    <module>cloud-consumer-consul-order-80</module>
    <module>cloud-consumer-openfeign-order-80</module>
    <module>cloud-provider-payment-hystrix-8001</module>
    <module>cloud-consumer-hystrix-order-80</module>
    <module>cloud-consumer-hystrix-dashboard-9001</module>
    <module>cloud-gateway-server-9527</module>
    <module>cloud-gateway-dynamic-route-server-9500</module>
    <module>cloud-gateway-dynamic-route-server-jdbc-9510</module>
    <module>cloud-spring-boot-admin-server</module>
    <module>cloud-config-server-9700</module>
    <module>cloud-config-client-9710</module>
    <module>cloud-config-client-9720</module>
    <module>easy-code-generate</module>
    <module>cloud-alibaba-nacos-client-9010</module>
    <module>cloud-alibaba-nacos-client-9020</module>
    <module>cloud-alibaba-sentinel-service-8401</module>
    <module>cloud-alibaba-nacos-ribbon-client-9003</module>
    <module>cloud-alibaba-nacos-ribbon-client-9004</module>
    <module>cloud-alibaba-consumer-nacos-order-84</module>
    <module>cloud-alibaba-consumer-nacos-openfeign-order-85</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <spring.boot.version>2.3.2.RELEASE</spring.boot.version>
    <spring.cloud.version>Hoxton.SR8</spring.cloud.version>
    <spring.cloud.alibaba.version>2.2.5.RELEASE</spring.cloud.alibaba.version>
    <junit.version>4.12</junit.version>
    <log4j.version>1.2.17</log4j.version>
    <lombok.version>1.18.2</lombok.version>
    <mysql.version>8.0.18</mysql.version>
    <druid.version>1.1.20</druid.version>
    <mybatis.spring.boot.version>2.1.1</mybatis.spring.boot.version>
    <admin.spring.boot.version>2.2.2</admin.spring.boot.version>
  </properties>

  <!-- 子模块继承之后，提供作用：锁定版本+子模块不用写groupId和version  -->
  <dependencyManagement>
    <dependencies>
      <!--  springboot 2.3.2.RELEASE    -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!--  spring cloud Hoxton.SR8   -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring.cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!--  spring cloud alibaba 2.2.5.RELEASE    -->
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>${spring.cloud.alibaba.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid-spring-boot-starter</artifactId>
        <version>${druid.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis.spring.boot</groupId>
        <artifactId>mybatis-spring-boot-starter</artifactId>
        <version>${mybatis.spring.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-starter-server</artifactId>
        <version>${admin.spring.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-server-ui</artifactId>
        <version>${admin.spring.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-starter-client</artifactId>
        <version>${admin.spring.boot.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <version>${spring.boot.version}</version>
      <scope>compile</scope>
    </dependency>
    <!--添加jacoco插件-->
    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>0.8.3</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <fork>true</fork>
          <addResources>true</addResources>
        </configuration>
      </plugin>
      <!--打包同时生成源码 maven-source-plugin-->
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--打包时跳过单元测试 maven-surefire-plugin-->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
          <forkMode>once</forkMode>
          <argLine>-Dfile.encoding=UTF-8</argLine>
        </configuration>
      </plugin>
      <!--jacoco插件-->
     <!-- <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.3</version>
        <configuration>
          <includes>
            <include>com/**/*</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <id>pre-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          &lt;!&ndash;指定输出目录&ndash;&gt;
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>target/jacoco.exec</dataFile>
              <outputDirectory>target/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>-->
    </plugins>
  </build>

</project>
